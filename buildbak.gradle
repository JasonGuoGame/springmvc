apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'jetty'
apply plugin: 'idea'
// JDK 7
sourceCompatibility = 1.8
targetCompatibility = 1.8

//Gretty Embedded Jetty
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

// Don't use Jetty8, even it's a servlet 3.0+ container,
// but not support non-jar WebApplicationInitializer scanning.
//// It will cause "No Spring WebApplicationInitializer types detected on classpath"
//gretty {
//    port = 8080
//    contextPath = 'spring4'
//    servletContainer = 'jetty9' //tomcat7 or tomcat8
//}


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile ("org.springframework:spring-web")
    compile ("org.springframework:spring-core")
    // https://mvnrepository.com/artifact/org.springframework/spring-context
    compile group: 'org.springframework', name: 'spring-context', version: '5.0.1.RELEASE'

    // https://mvnrepository.com/artifact/org.hibernate.javax.persistence/hibernate-jpa-2.1-api
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'
    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '2.0.1.RELEASE'
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
	compile 'javax.servlet:jstl:1.2'
}

// Embeded Jetty for testing
jettyRun{
	contextPath = "spring4"
	httpPort = 8080
}

jettyRunWar{
	contextPath = "spring4"
	httpPort = 8080
}

//For Eclipse IDE only
eclipse {

  wtp {
    component {

      //define context path, default to project folder name
      contextPath = 'spring4'

    }

  }
}